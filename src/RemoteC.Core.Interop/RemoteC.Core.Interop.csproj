<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <Nullable>enable</Nullable>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="System.Runtime.InteropServices" Version="4.3.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\RemoteC.Shared\RemoteC.Shared.csproj" />
  </ItemGroup>

  <!-- Include native libraries -->
  <ItemGroup>
    <!-- Windows x64 -->
    <Content Include="runtimes\win-x64\native\remotec_core.dll" Condition="Exists('runtimes\win-x64\native\remotec_core.dll')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Pack>true</Pack>
      <PackagePath>runtimes\win-x64\native\</PackagePath>
    </Content>
    
    <!-- Windows x86 -->
    <Content Include="runtimes\win-x86\native\remotec_core.dll" Condition="Exists('runtimes\win-x86\native\remotec_core.dll')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Pack>true</Pack>
      <PackagePath>runtimes\win-x86\native\</PackagePath>
    </Content>
    
    <!-- Linux x64 -->
    <Content Include="runtimes\linux-x64\native\libremotec_core.so" Condition="Exists('runtimes\linux-x64\native\libremotec_core.so')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Pack>true</Pack>
      <PackagePath>runtimes\linux-x64\native\</PackagePath>
    </Content>
    
    <!-- macOS x64 -->
    <Content Include="runtimes\osx-x64\native\libremotec_core.dylib" Condition="Exists('runtimes\osx-x64\native\libremotec_core.dylib')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Pack>true</Pack>
      <PackagePath>runtimes\osx-x64\native\</PackagePath>
    </Content>
    
    <!-- macOS ARM64 -->
    <Content Include="runtimes\osx-arm64\native\libremotec_core.dylib" Condition="Exists('runtimes\osx-arm64\native\libremotec_core.dylib')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Pack>true</Pack>
      <PackagePath>runtimes\osx-arm64\native\</PackagePath>
    </Content>
  </ItemGroup>
  
  <!-- Development fallback: copy from Rust target directory -->
  <ItemGroup Condition="!Exists('runtimes\win-x64\native\remotec_core.dll')">
    <Content Include="..\..\src\RemoteC.Core\target\release\remotec_core.dll" Condition="'$(OS)' == 'Windows_NT' And Exists('..\..\src\RemoteC.Core\target\release\remotec_core.dll')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Link>remotec_core.dll</Link>
    </Content>
    <Content Include="..\..\src\RemoteC.Core\target\release\libremotec_core.so" Condition="'$(OS)' == 'Unix' And !$([MSBuild]::IsOSPlatform('OSX')) And Exists('..\..\src\RemoteC.Core\target\release\libremotec_core.so')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Link>libremotec_core.so</Link>
    </Content>
    <Content Include="..\..\src\RemoteC.Core\target\release\libremotec_core.dylib" Condition="$([MSBuild]::IsOSPlatform('OSX')) And Exists('..\..\src\RemoteC.Core\target\release\libremotec_core.dylib')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Link>libremotec_core.dylib</Link>
    </Content>
  </ItemGroup>

</Project>